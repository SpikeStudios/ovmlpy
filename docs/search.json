[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Raymond. Author, maintainer. Adrien Ickowicz. Author. openvolley.org. Originator.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Raymond B, Ickowicz (2022). ovmlpy: Machine Learning Tools Volleyball. https://ovmlpy.openvolley.org, https://github.com/openvolley/ovmlpy.","code":"@Manual{,   title = {ovmlpy: Machine Learning Tools for Volleyball},   author = {Ben Raymond and Adrien Ickowicz},   year = {2022},   note = {https://ovmlpy.openvolley.org, https://github.com/openvolley/ovmlpy}, }"},{"path":"/index.html","id":"ovmlpy","dir":"","previous_headings":"","what":"Machine Learning Tools for Volleyball","title":"Machine Learning Tools for Volleyball","text":"ovmlpy package provides image video machine learning tools volleyball analytics. provides similar functionality ovml package, ovmlpy uses Python-based implementation offer improved performance. ovmlpy takes care installing Python required dependencies: need existing Python installation system.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Machine Learning Tools for Volleyball","text":"first use, need tell ovmlpy install Python required packages. install virtual environment, interfere Python installation(s) might already system: setup/installation notes: wish use GPU card improved performance need ensure drivers installed system first time use new type network, also download associated network weights file (~70MB, depending network version) note probably can’t use ovml ovmlpy R session, conflicts shared libraries. ovmlpy includes YOLO v7 object detection algorithm experimental version network specifically detecting volleyballs. implementation draws heavily WongKinYiu/yolov7.","code":"## install.packages(\"remotes\") remotes::install_github(\"openvolley/ovmlpy\") ovmlpy::ovml_yolo7_python_setup()"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Machine Learning Tools for Volleyball","text":"Create network object … … can use network detect objects image:  detect human poses (experimental!):","code":"library(ovmlpy) dn <- ovml_yolo() img <- ovml_example_image() dets <- ovml_yolo_detect(dn, img) ovml_ggplot(img, dets) dn2 <- ovml_yolo(\"7-w6-pose\") dets2 <- ovml_yolo_detect(dn2, img)  library(ggplot2) library(ggsci) ovml_ggplot(img) +     geom_segment(data = dets2, aes(x1, y1, xend = x2, yend = y2, col = segment), size = 1.5) +     scale_color_d3(palette = \"category20\", guide = \"none\")"},{"path":"/reference/ovml_yolo.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct YOLO network — ovml_yolo","title":"Construct YOLO network — ovml_yolo","text":"Models implemented Python accessed via reticulate.","code":""},{"path":"/reference/ovml_yolo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct YOLO network — ovml_yolo","text":"","code":"ovml_yolo(version = \"7\", device = 0, weights_file = \"auto\", ...)"},{"path":"/reference/ovml_yolo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct YOLO network — ovml_yolo","text":"version integer string: one 7 \"7-tiny\" : YOLO v7 v7-tiny device string numeric: \"cpu\" 0, 1, 2 etc GPU devices. Defaults 0 silently fall back \"cpu\" torch reports CUDA available weights_file string: either path weights file already exists system \"auto\". \"auto\", weights file downloaded necessary stored directory given ovml_cache_dir() ... : currently ignored","code":""},{"path":"/reference/ovml_yolo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct YOLO network — ovml_yolo","text":"YOLO network object","code":""},{"path":"/reference/ovml_yolo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct YOLO network — ovml_yolo","text":"https://github.com/WongKinYiu/yolov7","code":""},{"path":"/reference/ovml_yolo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct YOLO network — ovml_yolo","text":"","code":"if (FALSE) {   dn <- ovml_yolo()   img <- ovml_example_image()   res <- ovml_yolo_detect(dn, img)   ovml_ggplot(img, res) }"},{"path":"/reference/ovml_yolo7_python_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Install system requirements for using YOLO v7 via Python — ovml_yolo7_python_setup","title":"Install system requirements for using YOLO v7 via Python — ovml_yolo7_python_setup","text":"Python required packages installed virtual environment. ovml_yolo7_python_envname() returns name virtual environment used, ovml_yolo7_python_envpath() path file system.","code":""},{"path":"/reference/ovml_yolo7_python_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install system requirements for using YOLO v7 via Python — ovml_yolo7_python_setup","text":"","code":"ovml_yolo7_python_setup()  ovml_yolo7_python_envname()  ovml_yolo7_python_envpath()"},{"path":"/reference/ovml_yolo7_python_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install system requirements for using YOLO v7 via Python — ovml_yolo7_python_setup","text":"TRUE (invisibly) success","code":""},{"path":"/reference/ovml_yolo_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect objects in image using a YOLO network — ovml_yolo_detect","title":"Detect objects in image using a YOLO network — ovml_yolo_detect","text":"Works single input image , moment.","code":""},{"path":"/reference/ovml_yolo_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect objects in image using a YOLO network — ovml_yolo_detect","text":"","code":"ovml_yolo_detect(   net,   image_file,   conf = 0.25,   nms_conf = 0.45,   classes,   as,   ... )"},{"path":"/reference/ovml_yolo_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect objects in image using a YOLO network — ovml_yolo_detect","text":"net yolo: returned ovml_yolo() image_file character: path one image files, single video file (mp4, m4v, mov extension) conf scalar: confidence level nms_conf scalar: non-max suppression confidence level classes character: vector class names, detections classes returned string: object detection networks, \"boxes\" (default option); pose detection \"segments\" (default) \"keypoints\" ... : currently ignored","code":""},{"path":"/reference/ovml_yolo_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect objects in image using a YOLO network — ovml_yolo_detect","text":"data.frame columns \"image_number\", \"image_file\", \"class\", \"score\", \"xmin\", \"xmax\", \"ymin\", \"ymax\", \"frame\"","code":""},{"path":[]},{"path":"/reference/ovml_yolo_detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect objects in image using a YOLO network — ovml_yolo_detect","text":"","code":"if (FALSE) {   dn <- ovml_yolo()   img <- ovml_example_image()   res <- ovml_yolo_detect(dn, img)   ovml_ggplot(img, res) }"},{"path":"/reference/ovmlpy.html","id":null,"dir":"Reference","previous_headings":"","what":"ovmlpy — ovmlpy","title":"ovmlpy — ovmlpy","text":"Image video machine learning tools, application volleyball analytics.","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>% ovml.common ovml_cache_dir, ovml_class_labels, ovml_example_image, ovml_ggplot, ovml_plot","code":""}]
